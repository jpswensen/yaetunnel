#!/usr/bin/python3

import json
import hashlib
import uuid
import sys
import configparser
import paramiko
import socket
import subprocess
import os
import time

def is_port_configured(port, dest_entries):
    for entry in dest_entries:
        if port == entry['dest_port']:
            return True
    return False

def ssh_ctrl(ip, user, pemfile, cmd):
    key = paramiko.RSAKey.from_private_key_file(os.path.expanduser(pemfile))
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh.connect(hostname=ip, username=user, pkey = key, compress = True,look_for_keys=False, allow_agent=False)
    except (socket.error,paramiko.AuthenticationException,paramiko.SSHException) as message:
        print(f"ERROR: SSH connection to {ip} failed: {str(message)}")
        sys.exit(1)

    stdin, stdout, ssh_stderr = ssh.exec_command(cmd)
    out = stdout.read()
    stdin.flush()
    ssh.close()
    return out

def query_destination_ports(pemfile,name):
    cmd = f'~/src/yaetunnel/yaetunnel-server query --name={name}'
    out = ssh_ctrl(server,'ec2-user',pemfile,cmd)
    
    server_ports_query = []
    if len(out) > 0:
        server_ports_query = json.loads(out)

    return server_ports_query

def add_missing_ports(pemfile, ports, server_ports_query):
    for port in ports:
        if not is_port_configured(port,server_ports_query):
            print(f'Port {port} not configured. Adding to server')
            cmd = f'~/src/yaetunnel/yaetunnel-server add --name={name} --uuid={new_uuid} --dest_port={port}'
            out = ssh_ctrl(server,'ec2-user',pemfile,cmd)


# First, we read from a config file to see the name and ports and find the uuid
config = configparser.ConfigParser()
config.read('yaetunnel.ini')
name = config['YAETUNNEL']['name']
ports = [int(i) for i in config['YAETUNNEL']['ports'].split(',')]
autossh = config['YAETUNNEL']['autossh'] 
server = config['YAETUNNEL']['server']
pem_file = config['YAETUNNEL']['pem']
m = hashlib.md5()
m.update(name.encode('utf-8'))
new_uuid = uuid.UUID(m.hexdigest())

# First, we ssh to query if in the database
# TODO: Need to fix this so that it points to the default location
# cmd = f'~/src/yaetunnel/yaetunnel-server query --name={name}'
# out = ssh_ctrl('localhost','jpswensen','Cerete02',cmd)
# server_ports_query = json.loads(out)

# Step 1: Check which ports are registered and register them if they are not
server_ports_query = query_destination_ports(pem_file,name)
add_missing_ports(pem_file, ports, server_ports_query)

# Step 2: Query the server table for this host again so that we know the tunnel port and the destination port
server_ports_query = query_destination_ports(pem_file, name)
for entry in server_ports_query:
    tunnel_port = entry['tun_port']
    destination_port = entry['dest_port']

    cmd_Popen = [autossh,'-i',pem_file,'-N',f'ec2-user@{server}','-R',f'{tunnel_port}:localhost:{destination_port}']

    print(f'AUTOSSH CMD: {cmd_Popen}')
    process = subprocess.Popen(cmd_Popen)
    
    
while True:
    time.sleep(1.0)
